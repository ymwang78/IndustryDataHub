[TAG EXTENTION]
onoff  = .ONOFF
status = .STATUS
mode   = .MODE
hi     = .HI
lo     = .LO
setpoint = .SETPOINT
target = .TARGET
IRV    = .IRV

[WATCHDOG]
tag = MPCWATCHDOG

[PROCESS]
un = 5          # u(process input) + DV 个数
yn = 7          # y(process output)个数

#    u + DV tag , average, standard deviation, DV,IRV(MV Only),fromCSV,CSVCol
#    必须配置是否为DV,DV不配置“IRV”，但可以配置是否从CSV读取，如果是，需要配置CSVCol 
u1 = MV1, 15, 1.6, false,1
u2 = MV2, 20, 1.6, false,2
u3 = MV3, 35, 1.6, false,3
u4 = DV1, 10, 0.7, true
u5 = DV2, 10, 0.7, true

# DV CSV file name
CSV_file = 'dvfile_short.csv'


#    y tag, average, standard deviation, Delay, Integral,IRV
#    必须配置delay，但是我并不使用它(也不关心该值，仅仅是需要一个占位符)，而是使用传递函数中定义的delay
y1 = CV1, 31, 3.4, 27, 0,1
y2 = CV2, 32, 5.9, 14, 0,2
y3 = CV3, 33, 5.3, 0,  0,3
y4 = CV4, 34, 8.7, 0,  0,4
y5 = CV5, 35, 8.0, 0,  0,5
y6 = CV6, 36, 8.4, 0,  0,6
y7 = CV7, 37, 6.7, 0,  0,7

# sampling time
Ts = 1

[TranslateFunction]
# 连续系统的传递函数定义 (m <= n)
#
#            b1 * s^(m-1) + b2 * s^(m-2) + ... + bm        -Delay * s
#  g (s) = -------------------------------------------  * e 
#            a1 * s^n + a2 * s^(n-1) + ....+ a(n+1)
#
#   B = [b1, b2, ..., b(m-1),b(m)]
#   A = [a1, a2, ..., a(n),  a(n+1)]
#
# y, u, B, A, Delay
#
# 下标从1开始
# 传递函数矩阵中某个位置没有对应的传递函数，可以不配置它，或者这样配置
#     y = m, u = n, B = [0], A = [0], Delay = 0

y = 1, u = 1, B = [4.05], A = [50, 1], Delay = 25
y = 1, u = 2, B = [1.77], A = [60, 1], Delay = 27
y = 1, u = 3, B = [5.88], A = [50, 1], Delay = 25
y = 1, u = 4, B = [1.20], A = [45, 1], Delay = 25
y = 1, u = 5, B = [1.44], A = [40, 1], Delay = 25

y = 2, u = 1, B = [5.39], A = [50, 1], Delay = 17
y = 2, u = 2, B = [5.72], A = [60, 1], Delay = 17
y = 2, u = 3, B = [6.90], A = [40, 1], Delay = 15
y = 2, u = 4, B = [1.52], A = [25, 1], Delay = 15
y = 2, u = 5, B = [1.83], A = [20, 1], Delay = 15

y = 3, u = 1, B = [3.66], A = [ 9, 1], Delay = 4
y = 3, u = 2, B = [1.65], A = [30, 1], Delay = 4
y = 3, u = 3, B = [5.53], A = [40, 1], Delay = 6
y = 3, u = 4, B = [1.16], A = [11, 1], Delay = 4
y = 3, u = 5, B = [1.27], A = [ 6, 1], Delay = 4

y = 4, u = 1, B = [5.92], A = [12, 1], Delay = 8
y = 4, u = 2, B = [2.54], A = [27, 1], Delay = 9
y = 4, u = 3, B = [8.10], A = [20, 1], Delay = 9
y = 4, u = 4, B = [1.73], A = [ 5, 1], Delay = 8
y = 4, u = 5, B = [1.79], A = [19, 1], Delay = 9

y = 5, u = 1, B = [4.13], A = [ 8, 1], Delay = 5
y = 5, u = 2, B = [2.38], A = [19, 1], Delay = 7
y = 5, u = 3, B = [6.23], A = [10, 1], Delay = 5
y = 5, u = 4, B = [1.31], A = [ 2, 1], Delay = 5
y = 5, u = 5, B = [1.26], A = [22, 1], Delay = 5

y = 6, u = 1, B = [4.06], A = [13, 1], Delay = 7
y = 6, u = 2, B = [4.18], A = [33, 1], Delay = 7
y = 6, u = 3, B = [6.53], A = [ 9, 1], Delay = 5
y = 6, u = 4, B = [1.19], A = [19, 1], Delay = 5
y = 6, u = 5, B = [1.17], A = [24, 1], Delay = 5

y = 7, u = 1, B = [4.38], A = [33, 1], Delay = 15
y = 7, u = 2, B = [4.42], A = [44, 1], Delay = 15
y = 7, u = 3, B = [7.20], A = [19, 1], Delay = 15
y = 7, u = 4, B = [1.14], A = [27, 1], Delay = 16
y = 7, u = 5, B = [1.26], A = [32, 1], Delay = 17
